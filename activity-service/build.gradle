plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.diffplug.spotless" version "6.11.0"
    id "org.flywaydb.flyway" version "9.8.1"
    id 'com.google.protobuf' version '0.8.16'
    id 'idea'
}

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = '11'

apply from: "$rootProject.projectDir/dependencies.gradle"

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':monitoring-service')
    implementation(libs.springbootStarter)
    implementation(libs.springWeb)
    implementation(libs.springbootStarterWeb)
    implementation(libs.springbootStarterActuator)
    implementation(libs.springbootStarterValidation)
    implementation(libs.jacksonDatabind)

    implementation platform(libsPlatform.awssdkBom)
    implementation platform(libsPlatform.testcontainers)
    implementation(libs.jpa)
    implementation(libs.log4jApi)
    implementation(libs.log4jCore)

    implementation(libs.dynamoDB)
    implementation(libs.awsS3)
    implementation(libs.awsSqs)
    implementation(libs.grpc)
    implementation(libs.protobuf)
    implementation(libs.grpcStub)
    implementation(libs.grpcNettyShaded)
    runtimeOnly(libsRuntimeOnly.postgresql)

    testImplementation(libsTest.springbootStarterTest)
    testImplementation(libsTest.junit)
    testImplementation(libsTest.junitTestcontainers)
    testImplementation(libsTest.mockito)
    testImplementation(libsTest.assertj)
    testImplementation(libsTest.testPostgresql)
    testImplementation(libsTest.testflyway)
    testRuntimeOnly(libsRuntimeOnly.jupiterEngine)

}

tasks.named('test') {
    useJUnitPlatform()
}

spotless {
    format 'misc', {
        // define the files to apply `misc` to
        target '*.gradle', '*.md', '.gitignore'

        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithSpaces() // or spaces. Takes an integer argument if you don't like 4
        endWithNewline()
    }
    java {
        // don't need to set target, it is inferred from java

        // apply a specific flavor of google-java-format
        googleJavaFormat('1.8').aosp().reflowLongStrings()

        // fix formatting of type annotations
        formatAnnotations()
    }
}

flyway {
    url = "jdbc:postgresql://localhost:5432/sweetcity_PSQL"
    user = "postgres"
    password = "postgres"
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.17.3'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.39.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}


// Solve imports issues
idea {
    module {
        // Marks the already(!) added srcDir as "generated"
        generatedSourceDirs += file('build/generated/source')
    }
}
