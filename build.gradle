plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.diffplug.spotless" version "6.11.0"
    id "org.flywaydb.flyway" version "9.8.1"
}

allprojects {
    group 'org.example'
    version '1.0-SNAPSHOT'
    sourceCompatibility = '11'

    apply from: "$rootProject.projectDir/dependencies.gradle"

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation(libs.springbootStarter)
        implementation(libs.springWeb)
        implementation(libs.springbootStarterWeb)
        implementation(libs.springbootStarterActuator)
        implementation(libs.springbootStarterValidation)
        implementation(libs.jacksonDatabind)
        implementation(libs.hikariCP)
        implementation(libs.jdbi)
        implementation(libs.awsS3)
        implementation(libs.awsSqs)
        implementation platform(libsPlatform.awssdkBom)
        implementation(libs.jpa)
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        runtimeOnly(libsRuntimeOnly.postgresql)
        testImplementation(libsTest.springbootStarterTest)
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    spotless {
        format 'misc', {
            // define the files to apply `misc` to
            target '*.gradle', '*.md', '.gitignore'

            // define the steps to apply to those files
            trimTrailingWhitespace()
            indentWithSpaces() // or spaces. Takes an integer argument if you don't like 4
            endWithNewline()
        }
        java {
            // don't need to set target, it is inferred from java

            // apply a specific flavor of google-java-format
            googleJavaFormat('1.8').aosp().reflowLongStrings()
            // fix formatting of type annotations
            formatAnnotations()
        }
    }

    flyway {
        url = "jdbc:postgresql://localhost:5432/sweetcity_PSQL"
        user = "postgres"
        password = "postgres"
    }
}
